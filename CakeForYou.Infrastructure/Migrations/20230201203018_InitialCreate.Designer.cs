// <auto-generated />
using System;
using CakeForYou.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CakeForYou.Infrastructure.Migrations
{
    [DbContext(typeof(CfyDbContext))]
    [Migration("20230201203018_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CakeForYou.Domain.Cake.Cake", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cakes", (string)null);
                });

            modelBuilder.Entity("CakeForYou.Domain.IngredientEntity.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Measure")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients", (string)null);
                });

            modelBuilder.Entity("CakeForYou.Domain.Cake.Cake", b =>
                {
                    b.OwnsMany("CakeForYou.Domain.CakeAggregate.CakeIngredient.CakeIngredient", "CakeIngredients", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("CakeIngredientId");

                            b1.Property<Guid>("CakeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Amount")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValue(0.0);

                            b1.Property<Guid>("IngredientId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id", "CakeId");

                            b1.HasIndex("CakeId");

                            b1.HasIndex("IngredientId");

                            b1.ToTable("CakeIngredients", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CakeId");

                            b1.HasOne("CakeForYou.Domain.IngredientEntity.Ingredient", "Ingredient")
                                .WithMany()
                                .HasForeignKey("IngredientId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Ingredient");
                        });

                    b.Navigation("CakeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
